{"version":3,"sources":["components/model-profile.component.js","components/models.component.js","components/nav-bar.component.js","App.js","serviceWorker.js","index.js"],"names":["formReducer","state","event","name","value","StyledRating","withStyles","iconFilled","color","iconHover","Rating","ModelProfile","useReducer","formData","setFormData","useState","submitting","setSubmitting","user","useLocation","userProfile","undefined","className","id","height","width","src","image","alt","type","action","method","Box","component","mb","borderColor","Typography","defaultValue","getLabelText","precision","icon","fontSize","Object","entries","map","toString","onSubmit","preventDefault","setTimeout","placeholder","onChange","target","href","data-toggle","data-placement","title","data-original-title","data-abc","aria-hidden","window","location","Models","BASEURL","users","isLoading","errors","valueRecieved","props","keyRecieved","this","getUsers","axios","get","then","response","data","people","slug","setState","catch","error","to","pathname","Component","NavBAr","e","chan","App","keyword","x","rel","changeKeyword","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9473bfb2.chunk.js","sourcesContent":["// ** create-user.component.js ** //\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport React, { Component } from 'react';\r\nimport './model-profile.css';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport  { useReducer, useState } from 'react';\r\n\r\n\r\nconst formReducer = (state, event) => {\r\n    return {\r\n      ...state,\r\n      [event.name]: event.value\r\n    }\r\n   }\r\n\r\n//notes stars raiting\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n      color: \"#ff6d75\"\r\n    },\r\n    iconHover: {\r\n      color: \"#ff3d47\"\r\n    }\r\n  })(Rating);\r\n  \r\n  const customIcons = {\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon />,\r\n      label: \"Dissatisfied\"\r\n    }\r\n  };\r\n  \r\n  function IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n  }\r\n  \r\n  IconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired\r\n  };\r\n  \r\n \r\n  \r\nconst ModelProfile = () => {\r\n\r\n    //comment code\r\n    \r\n    const [formData, setFormData] = useReducer(formReducer, {});\r\n    const [submitting, setSubmitting] = useState(false);\r\n  \r\n    const handleSubmit = event => {\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n  \r\n      setTimeout(() => {\r\n        setSubmitting(false);\r\n      }, 3000);\r\n    }\r\n  \r\n    const handleChange = event => {\r\n      setFormData({\r\n        name: event.target.name,\r\n        value: event.target.value,\r\n      });\r\n    }\r\n\r\n\r\n    let user = useLocation().userProfile;\r\n       //if user is undefined then redirect to home page 'models'\r\n        if(user === undefined){\r\n            window.location.href=\"/\";\r\n        } else {\r\n               //else show model profile\r\n\r\n            return (\r\n                       \r\n     <div className=\"page-content page-container\" id=\"page-content\">\r\n        <div className=\"padding\">\r\n            <div className=\"row container d-flex justify-content-center\">\r\n                <div className=\"col-xl-6 col-md-12\">\r\n                    <div className=\"card user-card-full\">\r\n                        <div className=\"row m-l-0 m-r-0\">\r\n                            <div className=\"col-sm-4 bg-c-lite-green user-profile\">\r\n                                <div className=\"card-block  text-center text-white\">\r\n                                    <div className=\"m-b-25\"> <img height='100px' width='100px' src={'https://i.mdel.net/i/db/'+user.image} alt={user.name} className=\"img-radius\" /> </div>\r\n                                    <h6 className=\"f-w-600\">{user.name}</h6>\r\n                                    <p>{user.type}</p> <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-8\">\r\n                                <div className=\"card-block\">\r\n                                    <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">Information</h6>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <p className=\"m-b-10 f-w-600\">Email</p>\r\n                                            <h6 className=\"text-muted f-w-400\">rntng@gmail.com</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <p className=\"m-b-10 f-w-600\">Phone</p>\r\n                                            <h6 className=\"text-muted f-w-400\">98979989898</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\">Projects</h6>\r\n                                    <div className=\"row\">\r\n                                    <form action=\"/api\" method=\"POST\">\r\n                                    <div>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Notes</Typography>\r\n        <StyledRating\r\n          name=\"customized-color\"\r\n          defaultValue={2}\r\n          getLabelText={(value) => `${value} Heart${value !== 1 ? \"s\" : \"\"}`}\r\n          precision={0.5}\r\n          icon={<FavoriteIcon fontSize=\"inherit\" />}\r\n        />\r\n      </Box>\r\n      <hr/>\r\n      <div className=\"commentForm panel panel-default\">\r\n          <div className=\"panel-body\">\r\n          {submitting &&\r\n        <div>Submtting Form...</div>\r\n        }\r\n        <ul>\r\n           {Object.entries(formData).map(([name, value]) => (\r\n             <li key={name}><strong>{name}</strong>:{value.toString()}</li>\r\n           ))}\r\n         </ul>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <input className=\"form-control\" type=\"text\" placeholder=\"Your name\" name=\"Said \" onChange={handleChange}  /><br/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    </div>\r\n                                    </form>\r\n                                    </div>\r\n                                    <ul className=\"social-link list-unstyled m-t-40 m-b-10\">\r\n                                        <li><a href=\"#!\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"facebook\" data-abc=\"true\"><i className=\"mdi mdi-facebook feather icon-facebook facebook\" aria-hidden=\"true\"></i></a></li>\r\n                                        <li><a href=\"#!\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"twitter\" data-abc=\"true\"><i className=\"mdi mdi-twitter feather icon-twitter twitter\" aria-hidden=\"true\"></i></a></li>\r\n                                        <li><a href=\"#!\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"instagram\" data-abc=\"true\"><i className=\"mdi mdi-instagram feather icon-instagram instagram\" aria-hidden=\"true\"></i></a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n            )\r\n        }\r\n        \r\n    \r\n}\r\n\r\n\r\nexport default ModelProfile\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './models.css';\r\nimport ModelProfile from './model-profile.component';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Models extends Component {\r\n   \r\n  \r\n\r\n    BASEURL = 'https://api.models.com/prosearch/sitesearch19-json.html?mdcsearch='\r\n\r\n    componentDidMount(){\r\n      this.getUsers();\r\n    }\r\n      \r\n\r\n      state = {\r\n        users: [],\r\n        isLoading: true,\r\n        errors: null\r\n      };\r\n    \r\n      valueRecieved = this.props.keyRecieved;\r\n      \r\n\r\n      getUsers() {\r\n       \r\n        \r\n        axios\r\n          .get(this.BASEURL+this.valueRecieved)\r\n          .then(response =>\r\n            response.data.people.map(user => ({\r\n              slug: `${user.slug}`,\r\n              name: `${user.name}`,\r\n              type: `${user.type}`,\r\n              image: `${user.image}`\r\n            }))\r\n          )\r\n          .then(users => {\r\n            this.setState({\r\n              users,\r\n              isLoading: false\r\n            });\r\n          })\r\n          .catch(error => this.setState({ error, isLoading: false }));\r\n      }\r\n    \r\n      \r\n    \r\n      render() {\r\n        const { isLoading, users } = this.state;\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n              {!isLoading ? (\r\n                users.map(user => {\r\n                  const { slug, name, type, image } = user;\r\n                  return (\r\n                    \r\n                            <div className=\"card user-card\">\r\n                                <div className=\"card-header\" key={name}>\r\n                                    <h5>{slug}</h5>\r\n                                </div>\r\n                                <div className=\"card-block\">\r\n                                    <div className=\"user-image\">\r\n                            \r\n                                        <img src={'https://i.mdel.net/i/db/'+image} alt={name} className=\"img-radius\"   ></img>\r\n                                    </div>\r\n                                    <Link to={{ pathname: '/model-profile', userProfile: user }} > <h6 className=\"f-w-600 m-t-25 m-b-10\" >{name}</h6></Link>\r\n                                    \r\n                                    <p className=\"text-muted\">Active | Male | Born 23.05.1992</p>\r\n                                    <hr>\r\n                                    </hr>\r\n                                    <p className=\"text-muted m-t-15\">Activity Level: 87%</p>\r\n                                    <ul className=\"list-unstyled activity-leval\">\r\n                                        <li className=\"active\"></li>\r\n                                        <li className=\"active\"></li>\r\n                                        <li className=\"active\"></li>\r\n                                        <li></li>\r\n                                        <li></li>\r\n                                    </ul>\r\n                                    <div className=\"bg-c-green counter-block m-t-10 p-20\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4\"> \r\n                                               <i className=\"fa fa-comment\"></i><p>1256</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\"> \r\n                                               <i className=\"fa fa-user\"></i><p>8562</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\"> \r\n                                               <i className=\"fa fa-suitcase\"></i><p>189</p></div>\r\n                                            </div>\r\n                                    </div>\r\n                                    <p className=\"m-t-15 text-muted\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\r\n                                    <hr></hr>\r\n                                    <div className=\"row justify-content-center user-social-link\">\r\n                                                 <div className=\"col-auto\"><a href=\"#!\"><i className=\"fa fa-facebook text-facebook\"></i></a></div>\r\n                                                 <div className=\"col-auto\"><a href=\"#!\"><i className=\"fa fa-twitter text-twitter\"></i></a></div>\r\n                                                 <div className=\"col-auto\"><a href=\"#!\"><i className=\"fa fa-dribbble text-dribbble\"></i></a></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                      \r\n                  );\r\n                })\r\n              ) : (\r\n                <p>Loading...</p>\r\n              )}  \r\n                     </div>\r\n                    </div>\r\n                  </div>\r\n        );\r\n      \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './nav-bar.css';\r\n\r\n\r\nexport default class NavBAr extends Component {\r\n\r\n\r\n  \r\n   \r\n    render() {\r\n\r\n        \r\n        return (\r\n        <nav className=\"navbar\">\r\n        <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n         \r\n                <a className=\"navbar-brand\" href=\"#\" to=\"/models\"><span className=\"fa fa-home\"></span><span className=\"link\"> Models</span></a>\r\n          </div>\r\n        <div className=\"navbar-brand \" id=\"collapse-1\">\r\n             \r\n\r\n              <form className=\"navbar-form navbar-right\">\r\n                          <div className=\"form-group\">\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Search\"  onChange={e => {\r\n           \r\n            this.props.chan(e.target.value);\r\n          }}\r\n          \r\n          ></input>\r\n                          </div>\r\n                          <button type=\"submit\" className=\"btn\"></button>\r\n                    </form>\r\n\r\n        </div>\r\n      </div>\r\n    </nav> \r\n    \r\n    );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport CreateUser from \"./components/model-profile.component\";\nimport Users from \"./components/models.component\";\nimport ModelProfile from './components/model-profile.component';\nimport Models from './components/models.component';\nimport NavBAr from './components/nav-bar.component'\n\n\nclass App extends Component {\n  \n  state = {\n    keyword: ''\n  }\n  \n  changeKeyword(x){\n    this.setState({keyword: x});\n  }\n\n\n\n  render() {\n    return (\n    <Router>\n      <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\" rel=\"stylesheet\"/>\n      <div className=\"Manichino\">\n        <header>\n             <NavBAr keyword={this.state.keyword} chan= {(x) => this.changeKeyword(x)} />\n        </header>\n  \n       \n  \n  \n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <Switch>\n                <Route exact path='/' component={() =>  <Models keyRecieved ={this.state.keyword}></Models> } />\n                <Route path=\"/model-profile\" component={ModelProfile} />\n                <Route path=\"/models\" component={Models} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n    )\n  };\n}\n\nexport default App;","\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}